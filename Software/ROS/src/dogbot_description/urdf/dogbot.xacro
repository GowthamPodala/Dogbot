<?xml version="1.0"?>
<robot name="dogbot" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:property name="bodyheight" value="0.1" />
  <xacro:property name="bodywidth" value="0.38" />
  <xacro:property name="bodylen" value="0.43" />
  <xacro:property name="legoffset" value="0.125" />

  <xacro:property name="drivediam" value="0.08" />
  
  <xacro:property name="upperleglen" value="0.36" />
  <xacro:property name="lowerleglen" value="0.31" />
  
  <xacro:property name="pi" value="3.1415" />

  <material name="blue">
    <color rgba="0 0 0.8 1"/>
  </material>

  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>

  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>

  <xacro:macro name="default_inertial" params="mass">
    <inertial>
      <mass value="${mass}" />
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
    </inertial>
  </xacro:macro>

  <link name="base_link">
  </link>

  <link name="body">
    <visual>
      <geometry>
        <box size="${bodywidth} ${bodylen} ${bodyheight}"/>
      </geometry>
      <material name="white"/>
    </visual>
    <collision>
      <geometry>
        <box size="${bodywidth} ${bodylen} ${bodyheight}"/>
      </geometry>
    </collision>
        
    <xacro:default_inertial mass="4"/>

        
  </link>

  <joint name="base_joint" type="fixed">
    <axis xyz="0 0 0" rpy="0 0 0" />
    <parent link="base_link"/>
    <child link="body"/>
  </joint>

  <gazebo reference="body">
    <mu1 value="200.0"/>
    <mu2 value="100.0"/>
    <kp value="10000000.0" />
    <kd value="1.0" />
    <material>Gazebo/white</material>
  </gazebo>
   
  <xacro:macro name="leg" params="prefix suffix reflectx reflecty">
    <link name="${prefix}_${suffix}_roll">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <cylinder radius="${drivediam/2}" length="0.03"/>
        </geometry>
        <material name="white"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <cylinder radius="${drivediam/2}" length="0.03"/>
        </geometry>
      </collision>
      <xacro:default_inertial mass="1"/>
    </link>    
    
    <!--  -->
    
    <joint name="${prefix}_${suffix}_roll_joint" type="revolute">
      <axis xyz="0 1 0" rpy="0 0 0" />
      <parent link="body"/>
      <child link="${prefix}_${suffix}_roll"/>
      <origin xyz="${legoffset*reflectx} ${bodylen * reflecty/2} 0" rpy="0 0 ${-pi*(1-reflecty)/2}"/>
      <limit 
         lower ="${(-pi * (reflectx * reflecty +1)/2) + (pi * (reflectx * reflecty -1)/8) }" 
         upper ="${(-pi * (reflectx * reflecty -1)/2) + (pi * (reflectx * reflecty +1)/8) }" 
         effort="500" velocity="10.0" />
    </joint>

    <link name="${prefix}_${suffix}_upperleg">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <cylinder radius="${drivediam/2}" length="0.03"/>
        </geometry>
        <material name="black"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <cylinder radius="${drivediam/2}" length="0.03"/>
        </geometry>
      </collision>
      <visual>
        <origin xyz="${upperleglen * reflectx /2} 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <box size="${upperleglen} 0.05 0.02"/>
        </geometry>
        <material name="white"/>
      </visual>
      <collision>
        <origin xyz="${upperleglen * reflectx /2} 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <box size="${upperleglen} 0.05 0.02"/>
        </geometry>
      </collision>
      <xacro:default_inertial mass="0.7"/>
    </link>    

    <joint name="${prefix}_${suffix}_pitch_joint" type="revolute">
      <axis xyz="0 1 0" rpy="0 0 0" />
      <parent link="${prefix}_${suffix}_roll"/>
      <child link="${prefix}_${suffix}_upperleg"/>
      <!--  rpy="0  ${pi * reflectx/2.3} ${pi *reflectx *reflecty /2} -->
      <origin xyz="${0.04*reflectx*reflecty} 0.07 -0.080" rpy="0  ${pi * reflectx/2} ${pi *reflectx *reflecty /2}"/>
      <limit 
        lower ="-${pi/2}" 
        upper="${pi/2}" 
        effort="500" 
        velocity="10.0" 
        />
    </joint>

    <link name="${prefix}_${suffix}_lowerleg">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <cylinder radius="${drivediam/2}" length="0.03"/>
        </geometry>
        <material name="black"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <cylinder radius="${drivediam/2}" length="0.03"/>
        </geometry>
      </collision>
      <visual>
        <origin xyz="${lowerleglen * reflectx /2} 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <box size="${lowerleglen} 0.005 0.04"/>
        </geometry>
        <material name="white"/>
      </visual>
      <collision>
        <origin xyz="${lowerleglen * reflectx /2} 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <box size="${lowerleglen} 0.005 0.04"/>
        </geometry>
      </collision>
      <xacro:default_inertial mass="0.3"/>
    </link>    

    <gazebo reference="${prefix}_${suffix}_lowerleg">
      <mu1 value="2000.0"/>
      <mu2 value="1000.0"/>
      <kp value="10000000.0" />
      <kd value="1.0" />
      <material>Gazebo/Grey</material>
    </gazebo>
    
    <joint name="${prefix}_${suffix}_knee_joint" type="revolute">
      <axis xyz="0 1 0" rpy="0 0 0" />
      <parent link="${prefix}_${suffix}_upperleg"/>
      <child link="${prefix}_${suffix}_lowerleg"/>
      <!-- 
         rpy="0 ${reflectx * pi/6} 0"  
         lower ="${(pi * (reflectx -1)/3.5) }" 
         upper ="${(pi * (reflectx +1)/3.5) }" 
      -->
      <origin xyz="${upperleglen * reflectx} 0 0" rpy="0 0 0"/>
      <limit 
         lower ="${(pi * reflectx - pi) }" 
         upper ="${(pi * reflectx + pi) }" 
         effort="500" velocity="10.0" />
    </joint>

    <transmission name="${prefix}_${suffix}_roll_transmition" >
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${prefix}_${suffix}_roll_joint">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="${prefix}_${suffix}_roll_actuator" >
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>

    <transmission name="${prefix}_${suffix}_pitch_transmition" >
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${prefix}_${suffix}_pitch_joint">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="${prefix}_${suffix}_pitch_actuator" >
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>

    <transmission name="${prefix}_${suffix}_knee_transmition" >
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${prefix}_${suffix}_knee_joint">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="${prefix}_${suffix}_knee_actuator" >
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>
    
  </xacro:macro>

  <xacro:leg prefix="front" suffix="right" reflectx="-1"  reflecty="-1"/>
  <xacro:leg prefix="front" suffix="left"  reflectx="1" reflecty="-1" />
  <xacro:leg prefix="back"  suffix="right" reflectx="-1"  reflecty="1"/>
  <xacro:leg prefix="back"  suffix="left"  reflectx="1" reflecty="1" />

  <gazebo>
    <plugin name="imu_plugin" filename="libhector_gazebo_ros_imu.so">
      <alwaysOn>true</alwaysOn>
      <bodyName>body</bodyName>
      <robotNamespace>dogbot</robotNamespace>
      <topicName>imu</topicName>
      <serviceName>imu_service</serviceName>
      <gaussianNoise>0.0</gaussianNoise>
      <updateRate>20.0</updateRate>
    </plugin>
    
    <plugin name="gps_plugin" filename="libhector_gazebo_ros_gps.so">
      <alwaysOn>true</alwaysOn>
      <bodyName>body</bodyName>
      <robotNamespace>dogbot</robotNamespace>
      <topicName>gps</topicName>
      <serviceName>imu_service</serviceName>
      <updateRate>100</updateRate>
      <referenceLatitude>51.5</referenceLatitude>
      <referenceLongitude>0.1278</referenceLongitude>
    </plugin>
  </gazebo>

  <!-- Gazebo plugin for ROS Control -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/dogbot</robotNamespace>  
    </plugin>
  </gazebo>


</robot>
